// Generated by CoffeeScript 1.7.1
(function($) {
  var Popout;
  Popout = function(element, options) {
    this.options = $.extend({
      parent: document.body,
      title: element.attr('title') || '',
      destination: null
    }, options);
    this.options.parent = $(this.options.parent);
    return this.create(element);
  };
  Popout.prototype.constructor = Popout;
  Popout.prototype.create = function(element) {
    var closeButton, popoutButton;
    closeButton = $('<span class="glyphicon glyphicon-remove-sign"></span>').on('mousedown', function(event) {
      return event.stopPropagation();
    }).on('click', $.proxy(this.close, this));
    popoutButton = $('<span class="glyphicon glyphicon-new-window"></span>').on('mousedown', function(event) {
      return event.stopPropagation();
    }).on('click', $.proxy(this.popout, this));
    this.titleBar = $('<div class="popout-title"></div>').on('mousedown.popoutbox', $.proxy(this.OnMoveStart, this)).append($('<span>' + this.options.title + '</span>')).append(closeButton);
    if (this.options.destination !== null) {
      this.titleBar.append(popoutButton);
    }
    this.resizeHandle = $('<span class="glyphicon glyphicon-th popout-handle"></span>').on('mousedown.popoutbox', $.proxy(this.OnResizeStart, this));
    this.popout = $('<div class="popout-box"></div>').append(this.titleBar).append(element).append(this.resizeHandle).appendTo(this.options.parent);
    this.w = this.popout.width();
    this.h = this.popout.height();
    this.x = this.options.x || (window.innerWidth - this.w) / 2;
    this.y = this.options.y || (window.innerHeight - this.h) / 2;
    this.popout.css({
      left: this.x,
      top: this.y
    });
  };
  Popout.prototype.popout = function(event) {
    this.window = window.open(this.options.destination, '_blank', 'height=600,width=600,scrollbars=no,status=yes,location=yes');
    this.close();
  };
  Popout.prototype.close = function(event) {
    this.popout.remove();
  };
  Popout.prototype.OnMoveStart = function(event) {
    this.popout.detach().appendTo(this.options.parent);
    this.drag = this.popout.offset();
    this.drag.x = event.screenX;
    this.drag.y = event.screenY;
    $(document).on('mousemove.popoutbox', $.proxy(this.OnMouseMove, this));
    $(document).on('mouseup.popoutbox', $.proxy(this.OnMouseUp, this));
    $(document).on('keyup.popoutbox', $.proxy(this.OnKeyUp, this));
    return cancelEvent(event);
  };
  Popout.prototype.OnResizeStart = function(event) {
    this.drag = {
      x: event.screenX,
      y: event.screenY,
      w: this.popout.width(),
      h: this.popout.height()
    };
    $(document).on('mousemove.popoutbox', $.proxy(this.OnMouseResize, this));
    $(document).on('mouseup.popoutbox', $.proxy(this.OnMouseUp, this));
    return cancelEvent(event);
  };
  Popout.prototype.OnMouseMove = function(event) {
    var x, y;
    x = this.drag.left - this.drag.x + event.screenX;
    y = this.drag.top - this.drag.y + event.screenY;
    if ((x + this.w) >= window.innerWidth) {
      return;
    }
    if ((y + this.h) >= window.innerHeight) {
      return;
    }
    this.popout.offset({
      top: this.y = y,
      left: this.x = x
    });
    return cancelEvent(event);
  };
  Popout.prototype.OnMouseResize = function(event) {
    this.w = this.drag.w - this.drag.x + event.screenX;
    this.h = this.drag.h - this.drag.y + event.screenY;
    this.popout.width(this.w);
    this.popout.height(this.h);
    return cancelEvent(event);
  };
  Popout.prototype.OnMouseUp = function(event) {
    this.drag = null;
    $(document).off('.popoutbox');
  };
  Popout.prototype.OnKeyUp = function(event) {
    if (event.keyCode === 27) {
      return this.close();
    }
  };
  window.Popout = Popout;
  return Popout;
})(window.jQuery);
